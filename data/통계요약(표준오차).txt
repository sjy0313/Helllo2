표준오차(Standard Error)    

혼자공부하는 데이터 분석 with 파이썬(P392 검증하고 예측하기)

샘플의 평균의 표준편차와 표준오차가 유사
표본 평균의 표준편차(표준오차) = 모집단의 표준편차 / 제곱근(표본에 포함된 샘플갯수)

sample_cnt = 40
np.std(ns_book7['대출건수']) / np.sqrt(sample_cnt) # 3.048338251806833


###########################################################
표준점수(Standard Score) : z-score
데이터가 정규분포를 따른다고 가정하고, 각 평균에서 얼마나 멀리 떨어져 있는지 
표준편차를 사용해 변환한 점수를 표준점수(standard score) 또는 z 점수(z score)라 한다.

z = (x - 평균) / 표준편차
z = (x - 모집단의 평균) / 표준편차

###########################################################
[누적분포]
표준정규분포 평균이 0이고 표준편차 1인 정규분포
평균이 0이고 표준편차 1을 z 점수 공식을 대입하면 z = x
z 점수를 사용해 전체 데이터가 어떻게 분포되어 있는지 표시

표준정규분포에서 z점수가 1.0 이내에 위치한 샘플은 전체의 68%에 해당한다.
표준정규분포에서 z점수가 2.0 이내에 위치한 샘플은 전체의 95%에 해당한다.

누적분포 구하는 파이썬 함수: 
	stats.norm.cdf(z)
	stats.norm.cdf(0) -> 0.5(50%)
	stats.norm.cdf(1.0) - stats.norm.cdf(-1.0) -> 0.68(68%)
	stats.norm.cdf(2.0) - stats.norm.cdf(-2.0) -> 0.95(95%)

누적분포로 z-score 구하는 파이썬 함수: 
	stats.norm.ppf(0.95) -> 2


###########################################################
[중심극한정리]
표준정규분포를 따르지 않는 데이터는?
정규분포 특성을 유도하는 방법으로 중심극한정리를 사용한다.

무작위로 샘플을 뽑아 만든 표본의 평균은 정규분포에 가깝다.
위의 과정을 여러번 반복 수행하여 전체 평균을 구한다.

# 샘플의 갯수에 따른 평균값
# 전체 : 11.5934
# 20건 : 11.3994
# 30건 : 11.5399(매직넘버)
# 40건 : 11.5613(전체에 가장 가까움)
# 50건 : 11.5321
# 60건 : 11.5115

모분산 (Population Variance):

모분산은 모집단의 분산을 나타냅니다. 모집단이란 분석하고자 하는 전체 집단을 의미합니다.
모분산은 모든 개별 데이터 포인트와 모평균 간의 편차의 제곱의 평균으로 계산됩니다.
모분산은 모집단의 특성을 설명하기 위해 사용됩니다. 하지만, 모집단 전체를 조사하는 것은 현실적
으로 불가능할 수 있습니다.
표본분산 (Sample Variance):

표본분산은 표본 데이터 집합의 분산을 나타냅니다. 표본은 모집단에서 추출된 부분 집합을 의미합니다.
표본분산은 각 개별 데이터 포인트와 표본평균 간의 편차의 제곱의 평균으로 계산됩니다.
표본분산은 모집단의 특성을 추정하기 위해 사용됩니다. 모집단의 모분산과 유사하지만, 
표본에서 계산되었기 때문에 모집단의 실제 분산과 정확히 일치하지 않을 수 있습니다.
표본분산은 통계적 추론 및 가설 검정에서 중요한 역할을 합니다.
따라서, 모분산은 모집단의 특성을 나타내고, 표본분산은 표본 데이터를 기반으로 
모집단의 특성을 추정하는 데 사용됩니다. 표본분산은 보다 현실적이고 실용적인 분석을 위해 
모집단의 특성을 추정하는 데 사용됩니다.
##############################################################################################

#%%

# 샘플(40)의 평균의 표준편차
np.std(sample_means) # 3.0355987564235165

# 표준오차(Standard Error)    
# 전체 대출건수의 표준편차를 샘플링 갯수(40)의 제곱근으로 나눔
# 표본 평균의 표준편차 = 모집단의 표준편차 / 제곱근(표본에 포함된 샘플갯수)
모집단의 표준편차 = 표본평균의 표준편차 * 제곱근(표본에 포함된 샘플갯수)

np.std(ns_book7['대출건수']) / np.sqrt(40) # 3.048338251806833

# 샘플의 평균의 표준편차와 표준오차가 유사


###############################################################################
# 신뢰구간(Confidence Interval)
# ## 모집단의 평균 범위 추정하기: 신뢰구간
###############################################################################

# 전제조건:
# 만약 딱 하나의 표본이 있다면 모집단의 평균을 추정할 수 있는가?
# 신뢰구간은 표본의 파라미터(평균)가 모집단의 평균 속할 것이라 믿는 모집단의 파라미터 범위이다.
##################################################################################
# ## 통계적 의미 확인하기: 가설검정
# 가설검정 hypothesis test p397/ 순열검정 permutaiton test p 402
# 귀무가설 또는 영가설(null hypothesis)
#   -표본 사이에 통계적으로 의미가 없다고 예상되는 가설
#   -H0  
#   -도서 : 파이썬과 C++도서의 평균 대출건수가 같다.
# 대립가설 alternative hypothesis
#   -Ha 
#   -가설: 파이썬과 C++도서의 평균 대출건수가 같지않다.
#   - 
# 유의수준(Significance level)
#   - 0.05(5%), 0.01(1%)
#   - 일반적으로 많이 사용하는 기준은 정규분포의 양쪽 꼬리 면적의 더해 5%가 되는 지점이다
#   - p-value가 0.05% 미만일 떄 영가설 기각한다.

# 따라서 영가설을 기각하며 두 도서의 대출건수의 평균 차이는 우연이 아님.

# 위의 모든 과정은 모집단의 평균이 정규분포를 따른다는 가정하에 진행되었다.
##################################################################################
# (모집단의 파라미터(평균,분산)을 추정x -> 비모수검정 nonparametric-test)
# 만약 정규분포가 아닐 때 가설 검증하기: 순열검정
# 모집단의 분포가 정규분포가 아니거나 모집단의 분포를 알 수 없을 떄 
# 두 그룹에서 다시 평균의 차이를 계산한다
# 위 과정을 여러번 반복
# 원래 표본의 평균 차이가 무작위로 나눈 그룹의 평균 차이보다 
# 크거나 작은 경우를 헤아려서 p-값을 계산